// http:localhost:8080/ tests

### OAuth

GET http://localhost:8080/


### Create a card

POST http://localhost:8080/cards HTTP/1.1
Content-Type: application/json

{
  "title": "Another New Auth Config Card",
  "description": "This card is a test added to check whether authorization is working.",
  "startDate": "",
  "dueDate": "",
  "assignedTo": "Thor",
  "isDone":false,
  "isBlocked":true
}

### Get all cards

GET http://localhost:8080/cards

### Get one card by ID

GET http://localhost:8080/cards/628ae9c3eaedf5771995e3c7

### Update a card

PUT http://localhost:8080/cards/629e71c492babe8e0222faf1 HTTP/1.1
Content-Type: application/json

{
  "title": "Test Update Card",
  "description": "The updated test card for my project management tool.",
  "startDate": "2022-05-22",
  "dueDate": "2022-06-22",
  "assignedTo": "Thor",
  "isDone": false,
  "isBlocked": true
}

### Delete card by ID

DELETE http://localhost:8080/cards/628914a5379a7cdd86ad7df1

### Create a comment

POST http://localhost:8080/comments HTTP/1.1
Content-Type: application/json

{
  "comment": "Test comment after many fails",
  "cardId": "6288fce039bcb2bd2bf3d121",
  "user": "Thor",
  "dateAdded": "2022-05-27"
}

### Get all comments by card ID

GET http://localhost:8080/comments/6288fce039bcb2bd2bf3d120

### Update comment by ID

PUT http://localhost:8080/comments/628d8d388948684405d3c134 HTTP/1.1
Content-Type: application/json

{
  "comment": "Error handling test adding comment by wrong ID, take two",
  "dateModified": "2022-05-24"
}

### Delete a comment

DELETE http://localhost:8080/comments/628d98e6028e105a1bf73ab3

### Create a user:

POST http://localhost:8080/users HTTP/1.1
Content-Type: application/json

{
  "email": "bigtony@me.com",
  "firstName": "Tony",
  "lastName": "Gennovese"
}

### Get a user by email 

GET http://localhost:8080/users/bigtony@me.com

### Delete a user by email

DELETE http://localhost:8080/users/stevie@me.com

// Negative tests

### Create a card no title

POST http://localhost:8080/cards HTTP/1.1
Content-Type: application/json

{
  "title": "",
  "description": "The validation test card for my project management tool.",
  "startDate": "2022-05-28",
  "dueDate": "2022-06-22",
  "assignedTo": "Thor",
  "isDone":false,
  "isBlocked":true
}
//Should return error

### Create a card no description

POST http://localhost:8080/cards HTTP/1.1
Content-Type: application/json

{
  "title": "Validation Card",
  "description": "",
  "startDate": "2022-05-28",
  "dueDate": "2022-06-22",
  "assignedTo": "Thor",
  "isDone":false,
  "isBlocked":true
}
//Should return error

### Create a card no title & no description

POST http://localhost:8080/cards HTTP/1.1
Content-Type: application/json

{
  "title": "",
  "description": "",
  "startDate": "2022-05-28",
  "dueDate": "2022-06-22",
  "assignedTo": "Thor",
  "isDone":false,
  "isBlocked":true
}
//Should return error

### Create a card no dates, assigned to, isdone, and isblocked
POST http://localhost:8080/cards HTTP/1.1
Content-Type: application/json

{
  "title": "Dates test",
  "description": "This card should be created without dates, which are not required",
  "startDate": "",
  "dueDate": "",
  "assignedTo": ""
}
//Should create card with blank dates and default booleans

### Comments missing 

POST  http://localhost:8080/comments/ HTTP/1.1
Content-Type: application/json

{
  "cardId": "6288fce039bcb2bd2bf3d121",
  "user": "Thor",
  "dateAdded": "2022-05-27"
}

### cardId missing

POST  http://localhost:8080/comments/ HTTP/1.1
Content-Type: application/json

{
  "comment": "Test input comment",
  "user": "Thor",
  "dateAdded": "2022-05-27"
}

// User controller testing

### Input user info

POST http://localhost:8080/users HTTP/1.1
Content-Type: application/json

{
  "email": "thor@larsen.com",
  "firstName": "Thor",
  "lastName": "Larsen"
}

### Test user info

POST http://localhost:8080/users HTTP/1.1
Content-Type: application/json

{
  "email": "thorlarsen.com",
  "firstName": "Thor",
  "lastName": "Larsen"
}
